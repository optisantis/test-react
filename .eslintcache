[{"C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\index.js":"1","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\App.js":"2","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\components\\Header.js":"3","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\styles\\index.js":"4","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\components\\GridMemory.js":"5","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\components\\Button.js":"6","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\constants\\index.js":"7"},{"size":230,"mtime":1607168656623,"results":"8","hashOfConfig":"9"},{"size":1570,"mtime":1607256971393,"results":"10","hashOfConfig":"9"},{"size":1494,"mtime":1607241696655,"results":"11","hashOfConfig":"9"},{"size":119,"mtime":1607172548486,"results":"12","hashOfConfig":"9"},{"size":2758,"mtime":1607241778560,"results":"13","hashOfConfig":"9"},{"size":415,"mtime":1607191248810,"results":"14","hashOfConfig":"9"},{"size":1459,"mtime":1607241518815,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"oasvf1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\index.js",[],["34","35"],"C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\App.js",[],"C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\components\\Header.js",["36"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../styles\";\r\nimport { CHRONO_STATE } from \"../constants\";\r\n\r\nconst Header = ({ counter, chronoState }) => {\r\n  const [secondes, setSecondes] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n\r\n  const checkZero = (value) => {\r\n    return value < 10 ? `0${value}` : value;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (chronoState === CHRONO_STATE.RUNNING) {\r\n      interval = setInterval(() => {\r\n        if (secondes > 59) {\r\n          setSecondes(0);\r\n          setMinutes(minutes + 1);\r\n        } else {\r\n          setSecondes((seconds) => seconds + 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n    if(chronoState === CHRONO_STATE.NOT_LAUNCHED){\r\n      setSecondes(0);\r\n      setMinutes(0);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [chronoState]);\r\n\r\n\r\n  return (\r\n    <TopDiv>\r\n      <div>\r\n        <SmallWhite>Temps</SmallWhite>\r\n        <p>\r\n          {checkZero(minutes)}:{checkZero(secondes)}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <SmallWhite>Nombres de coups</SmallWhite>\r\n        <p>{counter}</p>\r\n      </div>\r\n    </TopDiv>\r\n  );\r\n};\r\n\r\nconst TopDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 22px;\r\n  width: 100%;\r\n  max-width: 750px;\r\n  p {\r\n    margin: 0;\r\n  }\r\n`;\r\nconst SmallWhite = styled.p`\r\n  font-size: 16px;\r\n  color: ${colors.starkSatin};\r\n`;\r\n\r\nexport default Header;\r\n","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\styles\\index.js",[],"C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\components\\GridMemory.js",["37","38"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  FULL_CASE_WIDTH,\r\n  ROW_LENGHT,\r\n  CASE_WIDTH,\r\n  CARD_STATE,\r\n} from \"../constants\";\r\n\r\nconst GridMemory = ({ handleCounter, stopChrono, startChrono, data, setData }) => {\r\n  const [firstPicked, setFirstPicked] = useState(-1);\r\n  const [secondPicked, setSecondPicked] = useState(-1);\r\n  const [cardFound, setCardFound] = useState(0);\r\n\r\n  const updateCase = (i) => {\r\n    if (firstPicked === -1) {\r\n      data[i].state = CARD_STATE.ACTIVE;\r\n      setData([...data]);\r\n      setFirstPicked(i);\r\n    } else if (secondPicked === -1) {\r\n      data[i].state = CARD_STATE.ACTIVE;\r\n      setData([...data]);\r\n      setSecondPicked(i);\r\n    }\r\n  };\r\n\r\n  const handleClickOnCase = (i) => {\r\n    startChrono();\r\n    if (data[i].state !== CARD_STATE.IDLE) return;\r\n    if (firstPicked !== -1 && secondPicked !== -1) {\r\n      data[firstPicked].state = CARD_STATE.IDLE;\r\n      data[secondPicked].state = CARD_STATE.IDLE;\r\n      setFirstPicked(-1);\r\n      setSecondPicked(-1);\r\n    }\r\n    updateCase(i);\r\n    handleCounter();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstPicked === -1 || secondPicked === -1) return;\r\n    if (data[firstPicked].src === data[secondPicked].src) {\r\n      data[firstPicked].state = CARD_STATE.FOUND;\r\n      data[secondPicked].state = CARD_STATE.FOUND;\r\n      setData([...data]);\r\n      setCardFound(cardFound + 2);\r\n      setFirstPicked(-1);\r\n      setSecondPicked(-1);\r\n    }\r\n  }, [secondPicked]);\r\n\r\n  useEffect(() => {\r\n    console.log(cardFound);\r\n    console.log(data.length);\r\n    if (cardFound === data.length) {\r\n      stopChrono();\r\n    }\r\n  }, [cardFound]);\r\n\r\n  const renderCard = (e) => {\r\n    switch (e.state) {\r\n      case CARD_STATE.ACTIVE:\r\n        return <img src={e.src} alt=\"\" width=\"145px\" height=\"145px\" />;\r\n      case CARD_STATE.FOUND:\r\n        return <ImageFound src={e.src} alt=\"\" width=\"145px\" height=\"145px\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  return (\r\n    <Grid>\r\n      {data.map((e, i) => (\r\n        <Case onClick={() => handleClickOnCase(i)} key={i}>\r\n          {renderCard(e)}\r\n        </Case>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Case = styled.div`\r\n  width: ${CASE_WIDTH}px;\r\n  height: ${CASE_WIDTH}px;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  width: calc(${FULL_CASE_WIDTH} * ${ROW_LENGHT});\r\n  height: calc(${FULL_CASE_WIDTH} * ${ROW_LENGHT});\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-content: space-evenly;\r\n`;\r\n\r\nconst ImageFound = styled.img`\r\n  opacity: 0.5;\r\n`;\r\n\r\nexport default GridMemory;\r\n","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\components\\Button.js",["39"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../styles\";\r\n\r\nexport default ({ title, onClick }) => <Button onClick={onClick}>{title}</Button>;\r\n\r\nconst Button = styled.button`\r\n  border-radius: 3px;\r\n  border: none;\r\n  background-color: ${colors.antagonisticCerulean};\r\n  color: ${colors.rationalNavy};\r\n  padding: 0.8em 2em;\r\n  margin: 2em;\r\n  cursor: pointer;\r\n`;\r\n","C:\\Users\\rouby\\Documents\\Projets\\test-react\\src\\constants\\index.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":31,"column":6,"nodeType":"46","endLine":31,"endColumn":19,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":50,"column":6,"nodeType":"46","endLine":50,"endColumn":20,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"50","line":58,"column":6,"nodeType":"46","endLine":58,"endColumn":17,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":1,"nodeType":"54","endLine":5,"endColumn":83},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'minutes' and 'secondes'. Either include them or remove the dependency array. You can also do a functional update 'setMinutes(m => ...)' if you only need 'minutes' in the 'setMinutes' call.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'cardFound', 'data', 'firstPicked', and 'setData'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["58"],"React Hook useEffect has missing dependencies: 'data.length' and 'stopChrono'. Either include them or remove the dependency array. If 'stopChrono' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["59"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [chronoState, minutes, secondes]",{"range":"66","text":"67"},"Update the dependencies array to be: [cardFound, data, firstPicked, secondPicked, setData]",{"range":"68","text":"69"},"Update the dependencies array to be: [cardFound, data.length, stopChrono]",{"range":"70","text":"71"},[886,899],"[chronoState, minutes, secondes]",[1503,1517],"[cardFound, data, firstPicked, secondPicked, setData]",[1675,1686],"[cardFound, data.length, stopChrono]"]